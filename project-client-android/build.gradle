apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.project"
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}


configurations {

    natives

}

dependencies {

    compile project(":project-client")

    compile "com.badlogicgames.gdx:gdx-backend-android:$GDX_VERSION"

    natives "com.badlogicgames.gdx:gdx-platform:$GDX_VERSION:natives-armeabi"
    natives "com.badlogicgames.gdx:gdx-platform:$GDX_VERSION:natives-armeabi-v7a"
    natives "com.badlogicgames.gdx:gdx-platform:$GDX_VERSION:natives-x86"

}

tasks.withType(com.android.build.gradle.tasks.PackageApplication) { pkgTask ->
    pkgTask.jniFolders = new HashSet<File>()
    pkgTask.jniFolders.add(new File(projectDir, 'lib'))
}

task copyAndroidNatives {
    file("lib/armeabi/").mkdirs();
    file("lib/armeabi-v7a/").mkdirs();
    file("lib/x86/").mkdirs();

    configurations.natives.files.each { jar ->
        def outputDir = null
        if (jar.name.endsWith("natives-armeabi-v7a.jar")) outputDir = file("lib/armeabi-v7a")
        if (jar.name.endsWith("natives-armeabi.jar")) outputDir = file("lib/armeabi")
        if (jar.name.endsWith("natives-x86.jar")) outputDir = file("lib/x86")
        if (outputDir != null) {
            copy {
                from zipTree(jar)
                into outputDir
                include "*.so"
            }
        }
    }
}